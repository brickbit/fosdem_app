default_platform(:ios)

platform :ios do

  def bump_build_number()
    latest_build_number = latest_testflight_build_number(initial_build_number: 0)
    return (latest_build_number + 1)
  end

  def get_version_name()
    version_name = lane_context[SharedValues::LATEST_TESTFLIGHT_VERSION]

    if version_name.empty?
      puts "*** Version name is empty, add version 1.0.0 ***"
      version_name = "1.0.0"
    end

    return version_name
  end



  before_all do
    load_asc_api_token
  end

  desc "Load the App Store Connect API token"
  lane :load_asc_api_token do
    app_store_connect_api_key(
      key_id: ENV["ASC_KEY_ID"],
      issuer_id: ENV["ASC_ISSUER_ID"],
      key_content: ENV["ASC_KEY_P8"],
      is_key_content_base64: true,
      in_house: false
    )
  end

  desc "Release a new build to Apple Store"
  lane :release_beta do
    puts "*** #{Dir.pwd} ***"
    commit = last_git_commit
    puts "*** Starting iOS release for commit(#{commit[:abbreviated_commit_hash]}) ***"
    #read api key from app_store_connect_api_key lane variable
    api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]
    #sync certificates and profiles using match
    sync_code_signing(
      api_key: api_key,
      git_url: ENV["GIT_URL_CERTIFICATES"],
      app_identifier: ENV["APP_IDENTIFIER"],
      type: "appstore",
      readonly: true,
    )
    puts "*** Build and sign iOS app release ***"
    Dir.chdir('/Users/rupestre/Projects/fosdem_app/iosApp') do
      puts "*** #{Dir.pwd} ***"
      gym(
        scheme: ENV["SCHEME"],
        export_team_id: ENV["TEAM_ID"],
        configuration: ENV["GYM_CONFIGURATION"],
        clean: true,
        include_symbols: true,
        output_directory: ENV["OUTPUT_IPA"],
        output_name: ENV["OUTPUT_NAME_APPSTORE"],
        project: ENV["WORKSPACE_NAME"],
      )
    end
    #puts "*** Upload app to testflight ***"
    #upload_to_testflight(api_key: api_key)
  end

end